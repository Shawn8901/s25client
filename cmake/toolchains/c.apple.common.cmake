INCLUDE("${CMAKE_CURRENT_LIST_DIR}/../Modules/CMakeMacroSetCCache.cmake")

# specify the cross compiler
SET_CCACHE(CMAKE_C_COMPILER i386-apple-darwin15-gcc)
SET_CCACHE(CMAKE_CXX_COMPILER i386-apple-darwin15-g++)
SET(CMAKE_RANLIB i386-apple-darwin15-ranlib CACHE STRING "" FORCE)
SET(CMAKE_LIPO i386-apple-darwin15-lipo CACHE STRING "" FORCE)

SET(OSX1011_SDK "/usr/lib/apple/SDKs/MacOSX10.11.sdk")

# set SDK (use newest first)
MESSAGE(STATUS "Getting SDK. Old deployment target: ${CMAKE_OSX_DEPLOYMENT_TARGET}. Old sysroot: ${CMAKE_OSX_SYSROOT}")
SET(CMAKE_OSX_DEPLOYMENT_TARGET )
IF(EXISTS ${OSX1011_SDK})
	SET(CMAKE_OSX_SYSROOT ${OSX1011_SDK})
ELSE()
	MESSAGE(FATAL_ERROR "No OSX SDK found!")
ENDIF()
SET(CMAKE_OSX_SYSROOT ${CMAKE_OSX_SYSROOT} CACHE PATH "Path to OSX SDK")
MESSAGE(STATUS "Using OSX SDK at ${CMAKE_OSX_SYSROOT}")

#SET(CMAKE_SYSROOT ${CMAKE_OSX_SYSROOT})

SET(CMAKE_PREFIX_PATH ${CMAKE_OSX_SYSROOT})
SET(CMAKE_FIND_ROOT_PATH ${CMAKE_PREFIX_PATH})
SET(BOOST_ROOT ${CMAKE_PREFIX_PATH})

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

INCLUDE("${CMAKE_CURRENT_LIST_DIR}/../../libutil/cmake/Modules/CMakeMacroForceAddFlags.cmake")

# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78380
FORCE_ADD_FLAGS(CMAKE_C_FLAGS -fmath-errno)
FORCE_ADD_FLAGS(CMAKE_CXX_FLAGS -fmath-errno)

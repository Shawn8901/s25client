# Detect possible platforms
IF("${DETECTED_OSX_ARCHS}" STREQUAL "")
    DetectOSXArchs()
ENDIF()
# Set default to current (if not set)
SET(CHOOSEN_OSX_ARCHS "${CMAKE_OSX_ARCHITECTURES}")
IF("${CHOOSEN_OSX_ARCHS}" STREQUAL "")
	SET(CHOOSEN_OSX_ARCHS "${PLATFORM_ARCH}")
ENDIF()

# Filter by flags
IF(NOT "${RTTR_NOx86_64}" STREQUAL "")
	REMOVE(CHOOSEN_OSX_ARCHS x86_64)
ENDIF()
IF(NOT "${RTTR_NOi386}" STREQUAL "")
	REMOVE(CHOOSEN_OSX_ARCHS i386)
ENDIF()
IF(NOT "${RTTR_NOi686}" STREQUAL "")
	REMOVE(CHOOSEN_OSX_ARCHS i686)
ENDIF()
IF(NOT "${RTTR_NOppc}" STREQUAL "")
	REMOVE(CHOOSEN_OSX_ARCHS ppc)
ENDIF()
SET(CMAKE_OSX_ARCHITECTURES "${CHOOSEN_OSX_ARCHS}" CACHE STRING "OSX-Architectures" FORCE)

IF("${CMAKE_OSX_ARCHITECTURES}" STREQUAL "")
	MESSAGE(FATAL_ERROR "No OSX architecture selected!")
ENDIF()

SET(APPLE_CFLAGS "")

IF ( "${CMAKE_OSX_ARCHITECTURES}" MATCHES "i386" )
	MESSAGE(STATUS "Building architecture i386")
ENDIF ( "${CMAKE_OSX_ARCHITECTURES}" MATCHES "i386" )

IF ( "${CMAKE_OSX_ARCHITECTURES}" MATCHES "x86_64" )
	MESSAGE(STATUS "Building architecture x86_64")
ENDIF ( "${CMAKE_OSX_ARCHITECTURES}" MATCHES "x86_64" )

IF ( "${CMAKE_OSX_ARCHITECTURES}" MATCHES "ppc" )
	MESSAGE(STATUS "Building architecture ppc")
ENDIF ( "${CMAKE_OSX_ARCHITECTURES}" MATCHES "ppc" )

# i386 only?
IF ( NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "x86_64" AND NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "ppc" )
	ADD_FLAGS(APPLE_CFLAGS -mtune=prescott -mmmx -mfpmath=sse)
ENDIF ( NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "x86_64" AND NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "ppc" )

# ppc only?
IF ( NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "x86_64" AND NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "i386" )
	ADD_FLAGS(APPLE_CFLAGS -faltivec)
ENDIF ( NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "x86_64" AND NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "i386" )

# x86_64 only?
IF ( NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "ppc" AND NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "i386" )
    ADD_FLAGS(APPLE_CFLAGS -mtune=core2)
ENDIF ( NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "ppc" AND NOT "${CMAKE_OSX_ARCHITECTURES}" MATCHES "i386" )

ADD_FLAGS(APPLE_CFLAGS -fexceptions -msse -fomit-frame-pointer)
ADD_FLAGS(APPLE_LDFLAGS -fexceptions)

# set compiler flags
FORCE_ADD_FLAGS(CMAKE_C_FLAGS ${APPLE_CFLAGS})
FORCE_ADD_FLAGS(CMAKE_CXX_FLAGS ${APPLE_CFLAGS})

# set linker flags  -lstdc++ -lgcc_s.1 -lgcc_eh
FORCE_ADD_FLAGS(CMAKE_EXE_LINKER_FLAGS ${APPLE_LDFLAGS})
FORCE_ADD_FLAGS(CMAKE_MODULE_LINKER_FLAGS ${APPLE_LDFLAGS} )
FORCE_ADD_FLAGS(CMAKE_SHARED_LINKER_FLAGS ${APPLE_LDFLAGS} )

IF(CMAKE_VERSION VERSION_LESS 3.4)
    SET(CMAKE_FIND_LIBRARY_SUFFIXES ".tbd;.dylib;.so;.a" CACHE STRING "Library Suffixes" FORCE)
ENDIF()
